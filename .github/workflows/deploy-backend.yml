name: Deploy Backend to Beget

on:
  push:
    branches: [main]
    paths:
      - 'src/backend/**'
      - '.github/workflows/deploy-backend.yml'
      - 'docker-compose.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: nestuser
          POSTGRES_PASSWORD: nestpass
          POSTGRES_DB: nestdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'src/backend/package-lock.json'
          
      - name: Install dependencies
        working-directory: ./src/backend
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi
          
      - name: Build Docker image
        working-directory: ./src/backend
        run: docker build -t backend .
          
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push to GitHub Packages
        working-directory: ./src/backend
        run: |
          docker tag backend ghcr.io/${{ github.repository_owner }}/backend:latest
          docker push ghcr.io/${{ github.repository_owner }}/backend:latest
          
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          
      - name: Deploy to Beget
        run: |
          scp docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/app/
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd /home/${{ secrets.SSH_USER }}/app &&
            docker-compose pull &&
            docker-compose down &&
            docker-compose up -d
          "