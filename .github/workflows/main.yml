name: Build, Test and Deploy Nest.js to Beget

on:
  push:
    branches: [main]
    paths:
      - 'src/backend/**'
      - '.github/workflows/main.yml'
      - 'docker-compose.yml'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: nestuser
          POSTGRES_PASSWORD: nestpass
          POSTGRES_DB: nestdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        working-directory: ./src/backend
        run: npm ci
          
      - name: Run tests
        working-directory: ./src/backend
        run: npm run test
          
      - name: Build Docker image
        working-directory: ./src/backend
        run: |
          docker build -t nestjs-backend .
          docker save nestjs-backend -o nestjs-backend.tar
          
      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: src/backend/nestjs-backend.tar
          retention-days: 1

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: backend-image
          path: .
          
      - name: Load Docker image
        run: docker load -i src/backend/nestjs-backend.tar
          
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          
      - name: Prepare deployment files
        run: |
          mkdir -p deploy
          cp docker-compose.yml deploy/
          cp -r src/backend/.env* deploy/ || echo "No .env files found"
          
      - name: Copy files to server
        run: |
          scp -r deploy/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/app/
          
      - name: Deploy application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd /home/${{ secrets.SSH_USER }}/app &&
            docker-compose down &&
            docker-compose pull &&
            docker-compose up -d
          "